akka {

  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "cluster"
    warn-about-java-serializer-usage = off
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://crayfish-example-akka-sequence@127.0.0.1:2551",
      "akka.tcp://crayfish-example-akka-sequence@127.0.0.1:2552",
    //"akka.tcp://crayfish-example-akka-sequence@127.0.0.1:2553"
    ]
    jmx.multi-mbeans-in-same-jvm = on
  }

}

//prio-mailbox {
//  mailbox-type = "com.github.sftwnd.crayfish.examples.akka.sequence.distributed.RangeHolderFSM$AdminPriorityMailbox"
//}

//akka.actor.mailbox.requirements {
//  "com.github.sftwnd.crayfish.examples.akka.sequence.distributed.RangeHolderFSM$AdminPriorityMailboxSemantics" = prio-mailbox
//}

prio-dispatcher {
  mailbox-type = "com.github.sftwnd.crayfish.examples.akka.sequence.distributed.RangeHolderFSM$AdminPriorityMailbox"
}

prio-mailbox {
  mailbox-type = "com.github.sftwnd.crayfish.examples.akka.sequence.distributed.RangeHolderFSM$AdminPriorityMailbox"
}

akka.actor.deployment {
  /printActor {
    mailbox = prio-mailbox
  }
}